% 加载数据，并整理所有 Spike 于一行.
File = load('E:\Projects\Matlab\data\12-23-1-before-10minspon.mat');
Names = fieldnames(File)
spikes = [];
for k = 1:length(Namess)
    Names = Namess{k,1};
    data = extractfield(a,Names);
    spikes = [spikes data];
end

% 获取网络同步爆发起始时间数据.
NN = 10;
isi_nn = 0.001;
[Burst, SpikeBurstNumber] = BurstDetectISIn( spikes, NN, isi_nn);
neu_burst = Burst.T_

% 外层控制输出图个数 目前60s的间隔
for t=1:1
    start_time = (t-1) * 10 % 开始时间
    end_time = t * 10 % 结束时间
    % for i = 1:
    for i = 1:length(Names)
        rowNames = Names{i,1};
        % 1个电极对应的数据 
        Data = extractfield(File,rowNames);
        % 取出每个电极符合这个范围内的数据
        bin_Data = Data(Data>=double(start_time) & Data<double(end_time));
        
        for f = 1:length(bin_Data)
            % 64 个电极分区域绘制.
            subplot(64,1,i);
            % 可更改颜色和粗细[0.067,0.443,0.705] % plot(bin_Data(f),i,".",'Color',[0,0,0]); 
            plot([bin_Data(f),bin_Data(f)],[i-1,i],'Color',[0,0,0],'linewidth',0.8); 
            
            % 在单通道爆发绘制后，对同步爆发范围内的数据进行标红.
            % 1. 范围内的全部标注.
            for j = 1 : length(neu_burst)
                    
                neu_burst_data = find(bin_Data >= neu_burst(j,1) & bin_Data <= neu_burst(j,2));
                for k = 1 : length(neu_burst_data)
                    plot([bin_Data(neu_burst_data(k)),bin_Data(neu_burst_data(k))],[i-1,i],'Color',[0,0,1],'linewidth',0.8); 
                end
                
                % 绘制边界
                if (neu_burst(j,1) >= start_time & neu_burst(j,2) <= end_time)
                    plot([neu_burst(j,1),neu_burst(j,1)],[i-1,i],'Color',[0.5,0.5,0.5],'linewidth',0.8); 
                    plot([neu_burst(j,2),neu_burst(j,2)],[i-1,i],'Color',[0.5,0.5,0.5],'linewidth',0.8); 
                end
                    
            end

            set(gca,'xtick',[],'ytick',[]); % 取出坐标
            set(gca,'Visible','off'); % 取出边框
%           set(gca,'XLim',[0 10]);
            hold on
         end
    end
end